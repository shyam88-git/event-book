{"ast":null,"code":"import axios from \"axios\";\nimport * as alertAction from '../alert/alert.action';\nimport * as userUtil from '../../util/userUtil';\nimport * as tokenUtil from '../../util/tokenUtil';\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE';\nexport const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\nexport const GET_USER_INFO_REQUEST = 'GET_USER_INFO_REQUEST';\nexport const GET_USER_INFO_SUCCESS = 'GET_USER_INFO_SUCCESS';\nexport const GET_USER_INFO_FAILURE = 'GET_USER_INFO_FAILURE';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const registerUser = (user, navigate) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: REGISTER_USER_REQUEST\n      });\n      let dataURL = 'http://127.0.0.1:5000/api/users/register';\n      let response = await axios.post(dataURL, user); // Use await to wait for the promise to resolve\n\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: response.data\n      });\n      dispatch(alertAction.setAlert(response.data.msg, 'success'));\n      navigate('/users/login');\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: REGISTER_USER_FAILURE,\n        payload: error.response.data\n      });\n    }\n  };\n};\nexport const loginUser = (user, navigate) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: LOGIN_USER_REQUEST\n      });\n      let dataURL = 'http://127.0.0.1:5000/api/users/login';\n      let response = await axios.post(dataURL, user);\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: response.data\n      });\n      dispatch(alertAction.setAlert(response.data.msg, 'success'));\n      navigate('/events/pro');\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_FAILURE,\n        payload: error.response.data\n      });\n    }\n  };\n};\nexport const getUserInfo = () => {\n  return async dispatch => {\n    if (userUtil.getToken()) {\n      tokenUtil.setAuthToken(userUtil.getToken());\n    }\n    try {\n      dispatch({\n        type: GET_USER_INFO_REQUEST\n      });\n      let dataURL = 'http://127.0.0.1:5000/api/users/';\n      let response = await axios.get(dataURL);\n      dispatch({\n        type: GET_USER_INFO_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: GET_USER_INFO_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const logoutUser = navigate => {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT_USER\n    });\n    navigate('/');\n  };\n};","map":{"version":3,"names":["axios","alertAction","userUtil","tokenUtil","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","GET_USER_INFO_REQUEST","GET_USER_INFO_SUCCESS","GET_USER_INFO_FAILURE","LOGOUT_USER","registerUser","user","navigate","dispatch","type","dataURL","response","post","payload","data","setAlert","msg","error","console","loginUser","getUserInfo","getToken","setAuthToken","get","logoutUser"],"sources":["D:/event_booking_app/src/redux/user/user.action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport * as alertAction from '../alert/alert.action';\r\nimport * as userUtil from '../../util/userUtil';\r\nimport * as tokenUtil from '../../util/tokenUtil';\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE';\r\n\r\nexport const LOGIN_USER_REQUEST='LOGIN_USER_REQUEST';\r\nexport const LOGIN_USER_SUCCESS='LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILURE='LOGIN_USER_FAILURE';\r\n\r\n\r\nexport const GET_USER_INFO_REQUEST='GET_USER_INFO_REQUEST';\r\nexport const GET_USER_INFO_SUCCESS='GET_USER_INFO_SUCCESS';\r\nexport const GET_USER_INFO_FAILURE='GET_USER_INFO_FAILURE';\r\n\r\n\r\nexport const LOGOUT_USER='LOGOUT_USER';\r\n\r\nexport const registerUser = (user, navigate) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: REGISTER_USER_REQUEST });\r\n      let dataURL = 'http://127.0.0.1:5000/api/users/register';\r\n      let response = await axios.post(dataURL, user); // Use await to wait for the promise to resolve\r\n\r\n      dispatch({ type: REGISTER_USER_SUCCESS, payload: response.data });\r\n\r\n      dispatch(alertAction.setAlert(response.data.msg, 'success'));\r\n      navigate('/users/login');\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch({ type: REGISTER_USER_FAILURE, payload: error.response.data });\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\nexport const loginUser = (user, navigate) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: LOGIN_USER_REQUEST });\r\n      let dataURL = 'http://127.0.0.1:5000/api/users/login';\r\n      let response = await axios.post(dataURL, user);\r\n\r\n      dispatch({ type: LOGIN_USER_SUCCESS, payload: response.data });\r\n      dispatch(alertAction.setAlert(response.data.msg, 'success'));\r\n      navigate('/events/pro');\r\n    } catch (error) {\r\n      dispatch({ type: LOGIN_USER_FAILURE, payload: error.response.data });\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const getUserInfo=()=>{\r\n\r\n  return async(dispatch)=>{\r\n    if(userUtil.getToken()){\r\n\r\n      tokenUtil.setAuthToken(userUtil.getToken());\r\n    }\r\n\r\n    try{\r\n\r\n      dispatch({type:GET_USER_INFO_REQUEST});\r\n      let dataURL='http://127.0.0.1:5000/api/users/';\r\n      let response=await axios.get(dataURL);\r\n      dispatch({type:GET_USER_INFO_SUCCESS,payload:response.data});\r\n\r\n\r\n    }\r\n    catch(error){\r\n      console.error(error);\r\n      dispatch({type:GET_USER_INFO_FAILURE,payload:error});\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport const logoutUser=(navigate)=>{\r\n\r\n  return (dispatch=>{\r\n\r\n    dispatch({type:LOGOUT_USER})\r\n    navigate('/');\r\n  });\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}