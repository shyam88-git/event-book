{"ast":null,"code":"import * as eventAction from '../event/event.action';\nexport const eventFeatureKey = 'events';\nconst initialState = {\n  loading: false,\n  events: [],\n  // Change this to your actual initial event data structure\n  errorMessage: ''\n};\nconst reducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case eventAction.UPLOAD_EVENT_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case eventAction.UPLOAD_EVENT_SUCCESS:\n      return {\n        ...state,\n        loading: false\n      };\n    case eventAction.UPLOAD_EVENT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: payload\n      };\n    case eventAction.FREE_EVENT_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case eventAction.FREE_EVENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        events: payload.events\n      };\n    case eventAction.FREE_EVENT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: payload\n      };\n    case eventAction.PRO_EVENT_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case eventAction.PRO_EVENT_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        events: payload.events\n      };\n    case eventAction.PRO_EVENT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: payload\n      };\n    default:\n      return state;\n  }\n};\nexport { reducer };","map":{"version":3,"names":["eventAction","eventFeatureKey","initialState","loading","events","errorMessage","reducer","state","action","type","payload","UPLOAD_EVENT_REQUEST","UPLOAD_EVENT_SUCCESS","UPLOAD_EVENT_FAILURE","FREE_EVENT_REQUEST","FREE_EVENT_SUCCESS","FREE_EVENT_FAILURE","PRO_EVENT_REQUEST","PRO_EVENT_RESPONSE","PRO_EVENT_FAILURE"],"sources":["D:/event_booking_app/src/redux/event/event.reducer.js"],"sourcesContent":["import * as eventAction from '../event/event.action';\r\n\r\nexport const eventFeatureKey = 'events';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  events: [], // Change this to your actual initial event data structure\r\n  errorMessage: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case eventAction.UPLOAD_EVENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case eventAction.UPLOAD_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n       \r\n      };\r\n\r\n    case eventAction.UPLOAD_EVENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: payload\r\n      };\r\n\r\n\r\n      case eventAction.FREE_EVENT_REQUEST:\r\n        return{\r\n\r\n          ...state,\r\n          loading:true\r\n        }\r\n        case eventAction.FREE_EVENT_SUCCESS:\r\n          return{\r\n\r\n            ...state,\r\n            loading:false,\r\n            events:payload.events\r\n          };\r\n        case eventAction.FREE_EVENT_FAILURE:\r\n          return{\r\n\r\n            ...state,\r\n            loading:false,\r\n            errorMessage:payload\r\n          };\r\n\r\n        case eventAction.PRO_EVENT_REQUEST:\r\n          return{\r\n\r\n            ...state,\r\n            loading:true\r\n          };\r\n        case eventAction.PRO_EVENT_RESPONSE:\r\n          return{\r\n\r\n            ...state,\r\n            loading:false,\r\n            events:payload.events\r\n          };\r\n        case eventAction.PRO_EVENT_FAILURE:\r\n          return{\r\n\r\n            ...state,\r\n            loading:false,\r\n            errorMessage:payload\r\n          };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport {reducer};\r\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,uBAAuB;AAEpD,OAAO,MAAMC,eAAe,GAAG,QAAQ;AAEvC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,EAAE;EAAE;EACZC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAChD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKT,WAAW,CAACW,oBAAoB;MACnC,OAAO;QACL,GAAGJ,KAAK;QACRJ,OAAO,EAAE;MACX,CAAC;IAEH,KAAKH,WAAW,CAACY,oBAAoB;MACnC,OAAO;QACL,GAAGL,KAAK;QACRJ,OAAO,EAAE;MAEX,CAAC;IAEH,KAAKH,WAAW,CAACa,oBAAoB;MACnC,OAAO;QACL,GAAGN,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdE,YAAY,EAAEK;MAChB,CAAC;IAGD,KAAKV,WAAW,CAACc,kBAAkB;MACjC,OAAM;QAEJ,GAAGP,KAAK;QACRJ,OAAO,EAAC;MACV,CAAC;IACD,KAAKH,WAAW,CAACe,kBAAkB;MACjC,OAAM;QAEJ,GAAGR,KAAK;QACRJ,OAAO,EAAC,KAAK;QACbC,MAAM,EAACM,OAAO,CAACN;MACjB,CAAC;IACH,KAAKJ,WAAW,CAACgB,kBAAkB;MACjC,OAAM;QAEJ,GAAGT,KAAK;QACRJ,OAAO,EAAC,KAAK;QACbE,YAAY,EAACK;MACf,CAAC;IAEH,KAAKV,WAAW,CAACiB,iBAAiB;MAChC,OAAM;QAEJ,GAAGV,KAAK;QACRJ,OAAO,EAAC;MACV,CAAC;IACH,KAAKH,WAAW,CAACkB,kBAAkB;MACjC,OAAM;QAEJ,GAAGX,KAAK;QACRJ,OAAO,EAAC,KAAK;QACbC,MAAM,EAACM,OAAO,CAACN;MACjB,CAAC;IACH,KAAKJ,WAAW,CAACmB,iBAAiB;MAChC,OAAM;QAEJ,GAAGZ,KAAK;QACRJ,OAAO,EAAC,KAAK;QACbE,YAAY,EAACK;MACf,CAAC;IAEP;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,SAAQD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}