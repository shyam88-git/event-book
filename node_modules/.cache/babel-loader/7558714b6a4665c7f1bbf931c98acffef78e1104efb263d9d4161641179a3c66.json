{"ast":null,"code":"import axios from \"axios\";\nimport * as alertAction from '../alert/alert.action';\nimport * as userUtil from '../../util/userUtil';\nimport * as tokenUtil from '../../util/tokenUtil';\nexport const UPLOAD_EVENT_REQUEST = 'UPLOAD_EVENT_REQUEST';\nexport const UPLOAD_EVENT_SUCCESS = 'UPLOAD_EVENT_SUCCESS';\nexport const UPLOAD_EVENT_FAILURE = 'UPLOAD_EVENT_FAILURE';\nexport const FREE_EVENT_REQUEST = 'FREE_EVENT_REQUEST';\nexport const FREE_EVENT_SUCCESS = 'FREE_EVENT_SUCCESS';\nexport const FREE_EVENT_FAILURE = 'FREE_EVENT_FAILURE';\nexport const PRO_EVENT_REQUEST = 'PRO_EVENT_REQUEST';\nexport const PRO_EVENT_RESPONSE = 'PRO_EVENT_RESPONSE';\nexport const PRO_EVENT_FAILURE = 'PRO_EVENT_FAILURE';\nexport const uploadEvent = (events, navigate) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: UPLOAD_EVENT_REQUEST\n      });\n      let dataURL = 'http://127.0.0.1:5000/api/events/upload';\n      let response = await axios.post(dataURL, events);\n      dispatch({\n        type: UPLOAD_EVENT_SUCCESS,\n        payload: response.data\n      });\n      dispatch(alertAction.setAlert('Upload Success', 'success'));\n      if (events.type === 'FREE') {\n        navigate('/events/free');\n      }\n      if (events.type === 'PRO') {\n        navigate('/events/pro');\n      }\n    } catch (error) {\n      dispatch({\n        type: UPLOAD_EVENT_FAILURE\n      });\n    }\n  };\n};\nexport const freeEvent = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FREE_EVENT_REQUEST\n      });\n      let dataURL = 'http://127.0.0.1:5000/api/events/free';\n      let response = await axios.get(dataURL);\n      dispatch({\n        type: FREE_EVENT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: FREE_EVENT_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nexport const proEvent = () => {\n  return async dispatch => {\n    try {\n      if (userUtil.getToken()) {\n        tokenUtil.setAuthToken(userUtil.getToken());\n      }\n      dispatch({\n        type: PRO_EVENT_REQUEST\n      });\n      let dataURL = 'http://127.0.0.1:5000/api/events/pro';\n      let response = await axios.get(dataURL);\n      dispatch({\n        type: PRO_EVENT_RESPONSE,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRO_EVENT_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","alertAction","userUtil","tokenUtil","UPLOAD_EVENT_REQUEST","UPLOAD_EVENT_SUCCESS","UPLOAD_EVENT_FAILURE","FREE_EVENT_REQUEST","FREE_EVENT_SUCCESS","FREE_EVENT_FAILURE","PRO_EVENT_REQUEST","PRO_EVENT_RESPONSE","PRO_EVENT_FAILURE","uploadEvent","events","navigate","dispatch","type","dataURL","response","post","payload","data","setAlert","error","freeEvent","get","message","proEvent","getToken","setAuthToken"],"sources":["D:/event_booking_app/src/redux/event/event.action.js"],"sourcesContent":["import axios from \"axios\";\r\nimport * as alertAction from '../alert/alert.action';\r\nimport * as userUtil from '../../util/userUtil';\r\nimport * as tokenUtil from '../../util/tokenUtil';\r\n\r\nexport const UPLOAD_EVENT_REQUEST = 'UPLOAD_EVENT_REQUEST';\r\nexport const UPLOAD_EVENT_SUCCESS = 'UPLOAD_EVENT_SUCCESS';\r\nexport const UPLOAD_EVENT_FAILURE = 'UPLOAD_EVENT_FAILURE';\r\n\r\n\r\nexport const FREE_EVENT_REQUEST='FREE_EVENT_REQUEST';\r\nexport const FREE_EVENT_SUCCESS='FREE_EVENT_SUCCESS';\r\nexport const FREE_EVENT_FAILURE='FREE_EVENT_FAILURE';\r\n\r\n\r\nexport const PRO_EVENT_REQUEST='PRO_EVENT_REQUEST';\r\nexport const PRO_EVENT_RESPONSE='PRO_EVENT_RESPONSE';\r\nexport const PRO_EVENT_FAILURE='PRO_EVENT_FAILURE';\r\n\r\nexport const uploadEvent = (events, navigate) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: UPLOAD_EVENT_REQUEST });\r\n      let dataURL = 'http://127.0.0.1:5000/api/events/upload';\r\n      let response = await axios.post(dataURL, events);\r\n      \r\n      dispatch({ type: UPLOAD_EVENT_SUCCESS, payload: response.data });\r\n      dispatch(alertAction.setAlert('Upload Success', 'success'));\r\n\r\n      if (events.type === 'FREE') {\r\n        navigate('/events/free');\r\n      }\r\n\r\n      if (events.type === 'PRO') {\r\n        navigate('/events/pro');\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: UPLOAD_EVENT_FAILURE });\r\n    }\r\n  };\r\n};\r\n\r\nexport const freeEvent=()=>{\r\n\r\n  return async (dispatch)=>{\r\n\r\n    try{\r\n      dispatch({type:FREE_EVENT_REQUEST});\r\n    let dataURL='http://127.0.0.1:5000/api/events/free';\r\n    let response=await axios.get(dataURL);\r\n    dispatch({type:FREE_EVENT_SUCCESS,payload:response.data});\r\n    \r\n\r\n\r\n    }\r\n    catch(error){\r\n\r\n      dispatch({type:FREE_EVENT_FAILURE,payload:error.message});\r\n    }\r\n  }\r\n}\r\n\r\nexport const proEvent=()=>{\r\n\r\n  return async(dispatch)=>{\r\n\r\n   try{\r\n\r\n    if(userUtil.getToken()){\r\n\r\n      tokenUtil.setAuthToken(userUtil.getToken());\r\n    }\r\n    dispatch({type:PRO_EVENT_REQUEST});\r\n    let dataURL='http://127.0.0.1:5000/api/events/pro';\r\n    let response=await axios.get(dataURL);\r\n    dispatch({type:PRO_EVENT_RESPONSE,payload:response.data});\r\n\r\n   }\r\n   catch(error){\r\n    dispatch({type:PRO_EVENT_FAILURE,payload:error.message});\r\n\r\n   }\r\n\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}